{"version":3,"file":"index.js","mappings":"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","sources":["webpack://supersetEmbeddedSdk/webpack/universalModuleDefinition","webpack://supersetEmbeddedSdk/./node_modules/@superset-ui/switchboard/esm/switchboard.js","webpack://supersetEmbeddedSdk/webpack/bootstrap","webpack://supersetEmbeddedSdk/webpack/runtime/define property getters","webpack://supersetEmbeddedSdk/webpack/runtime/harmony module decorator","webpack://supersetEmbeddedSdk/webpack/runtime/hasOwnProperty shorthand","webpack://supersetEmbeddedSdk/webpack/runtime/make namespace object","webpack://supersetEmbeddedSdk/./src/const.ts","webpack://supersetEmbeddedSdk/./node_modules/jwt-decode/build/esm/index.js","webpack://supersetEmbeddedSdk/./src/guestTokenRefresh.ts","webpack://supersetEmbeddedSdk/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"supersetEmbeddedSdk\"] = factory();\n\telse\n\t\troot[\"supersetEmbeddedSdk\"] = factory();\n})(globalThis, () => {\nreturn ","(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n// Each message we send on the channel specifies an action we want the other side to cooperate with.\nvar Actions = /*#__PURE__*/function (Actions) {Actions[\"GET\"] = \"get\";Actions[\"REPLY\"] = \"reply\";Actions[\"EMIT\"] = \"emit\";Actions[\"ERROR\"] = \"error\";return Actions;}(Actions || {});\n\n\n\n\n\n\n\n\n// helper types/functions for making sure wires don't get crossed\n\n\n\n\n\n\n\n\n\n\n\n\nfunction isGet(message) {\n  return message.switchboardAction === Actions.GET;\n}\n\n\n\n\n\n\n\nfunction isReply(message) {\n  return message.switchboardAction === Actions.REPLY;\n}\n\n\n\n\n\n\n\nfunction isEmit(message) {\n  return message.switchboardAction === Actions.EMIT;\n}\n\n\n\n\n\n\n\nfunction isError(message) {\n  return message.switchboardAction === Actions.ERROR;\n}\n\n/**\n * A utility for communications between an iframe and its parent, used by the Superset embedded SDK.\n * This builds useful patterns on top of the basic functionality offered by MessageChannel.\n *\n * Both windows instantiate a Switchboard, passing in their MessagePorts.\n * Calling methods on the switchboard causes messages to be sent through the channel.\n */\nexport class Switchboard {\n\n\n\n\n\n\n\n\n\n\n\n\n\n  constructor(params) {this.port = void 0;this.name = '';this.methods = {}; // used to make unique ids\n    this.incrementor = 1;this.debugMode = void 0;this.isInitialised = void 0;if (!params) {\n      return;\n    }\n    this.init(params);\n  }\n\n  init(params) {\n    if (this.isInitialised) {\n      this.logError('already initialized');\n      return;\n    }\n\n    const { port, name = 'switchboard', debug = false } = params;\n\n    this.port = port;\n    this.name = name;\n    this.debugMode = debug;\n\n    port.addEventListener('message', async (event) => {\n      this.log('message received', event);\n      const message = event.data;\n      if (isGet(message)) {\n        // find the method, call it, and reply with the result\n        this.port.postMessage(await this.getMethodResult(message));\n      } else if (isEmit(message)) {\n        const { method, args } = message;\n        // Find the method and call it, but no result necessary.\n        // Should this multicast to a set of listeners?\n        // Maybe, but that requires writing a bunch more code\n        // and I haven't found a need for it yet.\n        const executor = this.methods[method];\n        if (executor) {\n          executor(args);\n        }\n      }\n    });\n\n    this.isInitialised = true;\n  }\n\n  async getMethodResult({\n    messageId,\n    method,\n    args\n  }) {\n    const executor = this.methods[method];\n    if (executor == null) {\n      return {\n        switchboardAction: Actions.ERROR,\n        messageId,\n        error: `[${this.name}] Method \"${method}\" is not defined`\n      };\n    }\n    try {\n      const result = await executor(args);\n      return {\n        switchboardAction: Actions.REPLY,\n        messageId,\n        result\n      };\n    } catch (err) {\n      this.logError(err);\n      return {\n        switchboardAction: Actions.ERROR,\n        messageId,\n        error: `[${this.name}] Method \"${method}\" threw an error`\n      };\n    }\n  }\n\n  /**\n   * Defines a method that can be \"called\" from the other side by sending an event.\n   */\n  defineMethod(\n  methodName,\n  executor)\n  {\n    this.methods[methodName] = executor;\n  }\n\n  /**\n   * Calls a method registered on the other side, and returns the result.\n   *\n   * How this is accomplished:\n   * This switchboard sends a \"get\" message over the channel describing which method to call with which arguments.\n   * The other side's switchboard finds a method with that name, and calls it with the arguments.\n   * It then packages up the returned value into a \"reply\" message, sending it back to us across the channel.\n   * This switchboard has attached a listener on the channel, which will resolve with the result when a reply is detected.\n   *\n   * Instead of an arguments list, arguments are supplied as a map.\n   *\n   * @param method the name of the method to call\n   * @param args arguments that will be supplied. Must be serializable, no functions or other nonsense.\n   * @returns whatever is returned from the method\n   */\n  get(method, args = undefined) {\n    return new Promise((resolve, reject) => {\n      if (!this.isInitialised) {\n        reject(new Error('Switchboard not initialised'));\n        return;\n      }\n      // In order to \"call a method\" on the other side of the port,\n      // we will send a message with a unique id\n      const messageId = this.getNewMessageId();\n      // attach a new listener to our port, and remove it when we get a response\n      const listener = (event) => {\n        const message = event.data;\n        if (message.messageId !== messageId) return;\n        this.port.removeEventListener('message', listener);\n        if (isReply(message)) {\n          resolve(message.result);\n        } else {\n          const errStr = isError(message) ?\n          message.error :\n          'Unexpected response message';\n          reject(new Error(errStr));\n        }\n      };\n      this.port.addEventListener('message', listener);\n      this.port.start();\n      const message = {\n        switchboardAction: Actions.GET,\n        method,\n        messageId,\n        args\n      };\n      this.port.postMessage(message);\n    });\n  }\n\n  /**\n   * Emit calls a method on the other side just like get does.\n   * But emit doesn't wait for a response, it just sends and forgets.\n   *\n   * @param method\n   * @param args\n   */\n  emit(method, args = undefined) {\n    if (!this.isInitialised) {\n      this.logError('Switchboard not initialised');\n      return;\n    }\n    const message = {\n      switchboardAction: Actions.EMIT,\n      method,\n      args\n    };\n    this.port.postMessage(message);\n  }\n\n  start() {\n    if (!this.isInitialised) {\n      this.logError('Switchboard not initialised');\n      return;\n    }\n    this.port.start();\n  }\n\n  log(...args) {\n    if (this.debugMode) {\n      console.debug(`[${this.name}]`, ...args);\n    }\n  }\n\n  logError(...args) {\n    console.error(`[${this.name}]`, ...args);\n  }\n\n  getNewMessageId() {\n    // eslint-disable-next-line no-plusplus\n    return `m_${this.name}_${this.incrementor++}`;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const _default =\nnew Switchboard();export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(isGet, \"isGet\", \"/Users/evan_1/GitHub/superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(isReply, \"isReply\", \"/Users/evan_1/GitHub/superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(isEmit, \"isEmit\", \"/Users/evan_1/GitHub/superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(isError, \"isError\", \"/Users/evan_1/GitHub/superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(Switchboard, \"Switchboard\", \"/Users/evan_1/GitHub/superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");reactHotLoader.register(_default, \"default\", \"/Users/evan_1/GitHub/superset/superset-frontend/packages/superset-ui-switchboard/src/switchboard.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();\n//# sourceMappingURL=switchboard.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport const IFRAME_COMMS_MESSAGE_TYPE = \"__embedded_comms__\";\nexport const DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY: { [index: string]: any } = {\n  visible: \"show_filters\",\n  expanded: \"expand_filters\",\n}\n","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { jwtDecode } from \"jwt-decode\";\n\nexport const REFRESH_TIMING_BUFFER_MS = 5000 // refresh guest token early to avoid failed superset requests\nexport const MIN_REFRESH_WAIT_MS = 10000 // avoid blasting requests as fast as the cpu can handle\nexport const DEFAULT_TOKEN_EXP_MS = 300000 // (5 min) used only when parsing guest token exp fails\n\n// when do we refresh the guest token?\nexport function getGuestTokenRefreshTiming(currentGuestToken: string) {\n  const parsedJwt = jwtDecode<Record<string, any>>(currentGuestToken);\n  // if exp is int, it is in seconds, but Date() takes milliseconds\n  const exp = new Date(/[^0-9\\.]/g.test(parsedJwt.exp) ? parsedJwt.exp : parseFloat(parsedJwt.exp) * 1000);\n  const isValidDate = exp.toString() !== 'Invalid Date';\n  const ttl = isValidDate ? Math.max(MIN_REFRESH_WAIT_MS, exp.getTime() - Date.now()) : DEFAULT_TOKEN_EXP_MS;\n  return ttl - REFRESH_TIMING_BUFFER_MS;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY,\n  IFRAME_COMMS_MESSAGE_TYPE\n} from './const';\n\n// We can swap this out for the actual switchboard package once it gets published\nimport { Switchboard } from '@superset-ui/switchboard';\nimport { getGuestTokenRefreshTiming } from './guestTokenRefresh';\n\n/**\n * The function to fetch a guest token from your Host App's backend server.\n * The Host App backend must supply an API endpoint\n * which returns a guest token with appropriate resource access.\n */\nexport type GuestTokenFetchFn = () => Promise<string>;\n\nexport type UiConfigType = {\n  hideTitle?: boolean\n  hideTab?: boolean\n  hideChartControls?: boolean\n  filters?: {\n    [key: string]: boolean | undefined\n    visible?: boolean\n    expanded?: boolean\n  }\n  urlParams?: {\n    [key: string]: any\n  }\n}\n\nexport type EmbedDashboardParams = {\n  /** The id provided by the embed configuration UI in Superset */\n  id: string\n  /** The domain where Superset can be located, with protocol, such as: https://superset.example.com */\n  supersetDomain: string\n  /** The html element within which to mount the iframe */\n  mountPoint: HTMLElement\n  /** A function to fetch a guest token from the Host App's backend server */\n  fetchGuestToken: GuestTokenFetchFn\n  /** The dashboard UI config: hideTitle, hideTab, hideChartControls, filters.visible, filters.expanded **/\n  dashboardUiConfig?: UiConfigType\n  /** Are we in debug mode? */\n  debug?: boolean\n  /** The iframe title attribute */\n  iframeTitle?: string\n  /** additional iframe sandbox attributes ex (allow-top-navigation, allow-popups-to-escape-sandbox) **/\n  iframeSandboxExtras?: string[]\n}\n\nexport type Size = {\n  width: number, height: number\n}\n\nexport type EmbeddedDashboard = {\n  getScrollSize: () => Promise<Size>\n  unmount: () => void\n  getDashboardPermalink: (anchor: string) => Promise<string>\n  getActiveTabs: () => Promise<string[]>\n}\n\n/**\n * Embeds a Superset dashboard into the page using an iframe.\n */\nexport async function embedDashboard({\n  id,\n  supersetDomain,\n  mountPoint,\n  fetchGuestToken,\n  dashboardUiConfig,\n  debug = false,\n  iframeTitle = \"Embedded Dashboard\",\n  iframeSandboxExtras = []\n}: EmbedDashboardParams): Promise<EmbeddedDashboard> {\n  function log(...info: unknown[]) {\n    if (debug) {\n      console.debug(`[superset-embedded-sdk][dashboard ${id}]`, ...info);\n    }\n  }\n\n  log('embedding');\n\n  if (supersetDomain.endsWith(\"/\")) {\n    supersetDomain = supersetDomain.slice(0, -1);\n  }\n\n  function calculateConfig() {\n    let configNumber = 0\n    if(dashboardUiConfig) {\n      if(dashboardUiConfig.hideTitle) {\n        configNumber += 1\n      }\n      if(dashboardUiConfig.hideTab) {\n        configNumber += 2\n      }\n      if(dashboardUiConfig.hideChartControls) {\n        configNumber += 8\n      }\n    }\n    return configNumber\n  }\n\n  async function mountIframe(): Promise<Switchboard> {\n    return new Promise(resolve => {\n      const iframe = document.createElement('iframe');\n      const dashboardConfigUrlParams = dashboardUiConfig ? {uiConfig: `${calculateConfig()}`} : undefined;\n      const filterConfig = dashboardUiConfig?.filters || {}\n      const filterConfigKeys = Object.keys(filterConfig)\n      const filterConfigUrlParams = Object.fromEntries(filterConfigKeys.map(\n        key => [DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY[key], filterConfig[key]]))\n\n      // Allow url query parameters from dashboardUiConfig.urlParams to override the ones from filterConfig\n      const urlParams = {...dashboardConfigUrlParams, ...filterConfigUrlParams, ...dashboardUiConfig?.urlParams}\n      const urlParamsString = Object.keys(urlParams).length ? '?' + new URLSearchParams(urlParams).toString() : ''\n\n      // set up the iframe's sandbox configuration\n      iframe.sandbox.add(\"allow-same-origin\"); // needed for postMessage to work\n      iframe.sandbox.add(\"allow-scripts\"); // obviously the iframe needs scripts\n      iframe.sandbox.add(\"allow-presentation\"); // for fullscreen charts\n      iframe.sandbox.add(\"allow-downloads\"); // for downloading charts as image\n      iframe.sandbox.add(\"allow-forms\"); // for forms to submit\n      iframe.sandbox.add(\"allow-popups\"); // for exporting charts as csv\n      // additional sandbox props\n      iframeSandboxExtras.forEach((key: string) => {\n        iframe.sandbox.add(key);\n      });\n\n      // add the event listener before setting src, to be 100% sure that we capture the load event\n      iframe.addEventListener('load', () => {\n        // MessageChannel allows us to send and receive messages smoothly between our window and the iframe\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API\n        const commsChannel = new MessageChannel();\n        const ourPort = commsChannel.port1;\n        const theirPort = commsChannel.port2;\n\n        // Send one of the message channel ports to the iframe to initialize embedded comms\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n        // we know the content window isn't null because we are in the load event handler.\n        iframe.contentWindow!.postMessage(\n          { type: IFRAME_COMMS_MESSAGE_TYPE, handshake: \"port transfer\" },\n          supersetDomain,\n          [theirPort],\n        )\n        log('sent message channel to the iframe');\n\n        // return our port from the promise\n        resolve(new Switchboard({ port: ourPort, name: 'superset-embedded-sdk', debug }));\n      });\n      iframe.src = `${supersetDomain}/embedded/${id}${urlParamsString}`;\n      iframe.title = iframeTitle;\n      //@ts-ignore\n      mountPoint.replaceChildren(iframe);\n      log('placed the iframe')\n    });\n  }\n\n  const [guestToken, ourPort]: [string, Switchboard] = await Promise.all([\n    fetchGuestToken(),\n    mountIframe(),\n  ]);\n\n  ourPort.emit('guestToken', { guestToken });\n  log('sent guest token');\n\n  async function refreshGuestToken() {\n    const newGuestToken = await fetchGuestToken();\n    ourPort.emit('guestToken', { guestToken: newGuestToken });\n    setTimeout(refreshGuestToken, getGuestTokenRefreshTiming(newGuestToken));\n  }\n\n  setTimeout(refreshGuestToken, getGuestTokenRefreshTiming(guestToken));\n\n  function unmount() {\n    log('unmounting');\n    //@ts-ignore\n    mountPoint.replaceChildren();\n  }\n\n  const getScrollSize = () => ourPort.get<Size>('getScrollSize');\n  const getDashboardPermalink = (anchor: string) =>\n    ourPort.get<string>('getDashboardPermalink', { anchor });\n  const getActiveTabs = () => ourPort.get<string[]>('getActiveTabs')\n\n  return {\n    getScrollSize,\n    unmount,\n    getDashboardPermalink,\n    getActiveTabs,\n  };\n}\n"],"names":["root","factory","exports","module","define","amd","globalThis","enterModule","reactHotLoaderGlobal","undefined","__signature__","default","signature","a","Actions","isGet","message","switchboardAction","GET","isReply","REPLY","isEmit","EMIT","isError","ERROR","Switchboard","constructor","params","this","port","name","methods","incrementor","debugMode","isInitialised","init","logError","debug","addEventListener","async","event","log","data","postMessage","getMethodResult","method","args","executor","messageId","error","result","err","defineMethod","methodName","get","Promise","resolve","reject","Error","getNewMessageId","listener","removeEventListener","errStr","start","emit","console","__reactstandin__regenerateByEval","key","code","eval","_default","reactHotLoader","leaveModule","register","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","hmd","create","children","set","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","IFRAME_COMMS_MESSAGE_TYPE","DASHBOARD_UI_FILTER_CONFIG_URL_PARAM_KEY","visible","expanded","InvalidTokenError","b64DecodeUnicode","str","decodeURIComponent","atob","replace","m","p","charCodeAt","toString","toUpperCase","length","base64UrlDecode","output","jwtDecode","token","options","pos","header","part","split","decoded","e","JSON","parse","REFRESH_TIMING_BUFFER_MS","MIN_REFRESH_WAIT_MS","DEFAULT_TOKEN_EXP_MS","getGuestTokenRefreshTiming","currentGuestToken","parsedJwt","exp","Date","test","parseFloat","Math","max","getTime","now","embedDashboard","supersetDomain","mountPoint","fetchGuestToken","dashboardUiConfig","iframeTitle","iframeSandboxExtras","info","calculateConfig","configNumber","hideTitle","hideTab","hideChartControls","endsWith","slice","guestToken","ourPort","all","iframe","document","createElement","dashboardConfigUrlParams","uiConfig","filterConfig","filters","filterConfigKeys","keys","urlParams","fromEntries","map","urlParamsString","URLSearchParams","sandbox","add","forEach","commsChannel","MessageChannel","port1","theirPort","port2","contentWindow","type","handshake","src","title","replaceChildren","mountIframe","setTimeout","refreshGuestToken","newGuestToken","getScrollSize","unmount","getDashboardPermalink","anchor","getActiveTabs"],"sourceRoot":""}