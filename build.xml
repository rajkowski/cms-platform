<?xml version="1.0"?>

<project name="CMS Platform" default="build" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">

  <property name="project" value="cms-platform" />
  <property name="jdk" value="17" />
  <property name="fs" value="${file.separator}"/>
  <property name="lf" value="${line.separator}"/>
  <property name="javadoc.dir" value="docs" />
  <property name="base.dir" value="." />
  <property name="src.dir" value="${base.dir}/src/main/java" />
  <property name="src.test.dir" value="${base.dir}/src/test/java" />
  <property name="lib.dir" value="${base.dir}/lib/build" />
  <property name="lib.compile.dir" value="${base.dir}/lib/compile" />
  <property name="lib.test.dir" value="${base.dir}/lib/tests" />
  <property name="database.dir" value="${base.dir}/src/main/database" />
  <property name="resources.dir" value="${base.dir}/src/main/resources" />
  <property name="web.dir" value="${base.dir}/src/main/webapp" />
  <property name="build.dir" value="${base.dir}/build" />
  <property name="target.dir" value="${base.dir}/target" />
  <property name="out.dir" value="${base.dir}/out" />
  <property name="exploded.dir" value="${out.dir}/exploded/ROOT" />
  <property name="exploded.work.dir" value="${out.dir}/exploded-work/ROOT" />
  <property name="custom.dir" value="${base.dir}/web-customizations" />
  <property name="jee.lib.dir" value="${base.dir}/lib/war" />

  <typedef resource="org/apache/catalina/ant/catalina.tasks">
    <classpath>
      <fileset dir="${base.dir}/lib/war" includes="*.jar"/>
    </classpath>
  </typedef>

  <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties">
    <classpath>
      <fileset dir="${base.dir}/lib/style" includes="*.jar"/>
    </classpath>
  </taskdef>

  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
    <classpath>
      <fileset dir="${base.dir}/lib/tests" includes="*.jar"/>
    </classpath>
  </taskdef>

  <tstamp prefix="start">
    <format property="val" pattern="yyyy-MM-dd h:mm aa" />
  </tstamp>

  <!-- Version for scripts to use -->
  <target name="version">
    <echo message="Project: ${ant.project.name}"/>
    <loadfile srcfile="${src.dir}/com/simisinc/platform/ApplicationInfo.java" property="version">
      <filterchain>
        <linecontains>
          <contains value="String VERSION ="/>
        </linecontains>
        <tokenfilter>
<!--          public static final String VERSION = "20200323.10000";-->
          <replacestring from="public static final String VERSION = &quot;" to=""/>
          <replacestring from="&quot;;" to=""/>
          <trim />
        </tokenfilter>
      </filterchain>
    </loadfile>
    <fail unless="version">The version string could not be detected in ApplicationInfo.java</fail>
    <echo message="Version: ${version}"/>
    <echo message="Date: ${start.val}" />
  </target>

  <target name="clean">
    <delete dir="${build.dir}" />
    <delete dir="${target.dir}" />
  </target>

  <!-- Creates build directories -->
  <target name="prepare" depends="version">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${target.dir}"/>
    <tstamp />
    <path id="web.classpath">
      <fileset dir="${lib.compile.dir}">
        <include name="**/*.jar"/>
      </fileset>
      <fileset dir="${lib.dir}">
        <include name="**/*.jar"/>
      </fileset>
    </path>
    <path id="test.classpath">
      <fileset dir="${lib.test.dir}">
        <include name="**/*.jar"/>
      </fileset>
    </path>
  </target>

  <target name="build" depends="package">
    <echo message="Production .war: ${target.dir}/${project}.war"/>
  </target>

  <!-- Compiles the source code -->
  <target name="compile" depends="prepare">
    <javac srcdir="${src.dir}" source="${jdk}" target="${jdk}"
           destdir="${build.dir}"
           debug="on"
           debuglevel="lines,vars,source"
           deprecation="on"
           optimize="on"
           includeantruntime="false">
      <classpath>
        <path refid="web.classpath"/>
      </classpath>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <jar jarfile="${target.dir}/${project}.jar">
      <fileset dir="${build.dir}" />
    </jar>
  </target>

  <target name="package" depends="clean,jar">
    <mkdir dir="${target.dir}/${project}"/>
    <mkdir dir="${target.dir}/${project}/WEB-INF"/>
    <mkdir dir="${target.dir}/${project}/WEB-INF/compiled"/>
    <mkdir dir="${target.dir}/${project}/WEB-INF/classes"/>
    <mkdir dir="${target.dir}/${project}/WEB-INF/lib"/>
    <mkdir dir="${target.dir}/${project}/WEB-INF/jsp"/>
    <!-- Project Jar -->
    <copy file="${target.dir}/${project}.jar"
          todir="${target.dir}/${project}/WEB-INF/lib"
          verbose="true"/>
    <!-- Dependency Libraries -->
    <copy todir="${target.dir}/${project}/WEB-INF/lib" flatten="true" preservelastmodified="true">
      <fileset dir="${lib.dir}">
        <include name="**/*.jar"/>
      </fileset>
    </copy>
    <!-- Resources -->
    <copy todir="${target.dir}/${project}/WEB-INF">
      <fileset dir="${web.dir}/WEB-INF">
        <include name="**/*.html"/>
        <include name="**/*.xml"/>
        <include name="**/*.yml"/>
        <include name="**/*.tld"/>
        <include name="**/*.json"/>
        <include name="**/*.mmdb"/>
        <include name="**/*.properties"/>
      </fileset>
    </copy>
    <copy todir="${target.dir}/${project}/WEB-INF/classes">
      <fileset dir="${resources.dir}">
        <include name="**/*.properties"/>
        <include name="**/*.sql"/>
        <exclude name="jobrunr.properties"/>
        <exclude name="jobrunr.production.properties"/>
        <exclude name="simplelogger.properties"/>
        <exclude name="simplelogger.production.properties"/>
      </fileset>
    </copy>
    <!-- Production setting -->
    <copy file="${resources.dir}/jobrunr.production.properties"
          tofile="${target.dir}/${project}/WEB-INF/classes/jobrunr.properties"
          overwrite="true"
          verbose="false"/>
    <copy file="${resources.dir}/simplelogger.production.properties"
          tofile="${target.dir}/${project}/WEB-INF/classes/simplelogger.properties"
          overwrite="true"
          verbose="false"/>
    <!-- Version string for scripts -->
    <echo file="${target.dir}/${project}/WEB-INF/VERSION" append="true">${version}</echo>
    <!-- Web -->
    <copy todir="${target.dir}/${project}">
      <fileset dir="${web.dir}">
        <include name="robots.txt"/>
        <include name="css/**"/>
        <include name="fonts/**"/>
        <include name="images/**"/>
        <include name="javascript/**"/>
      </fileset>
    </copy>
    <!-- Custom Web App Content (optional) -->
    <copy todir="${target.dir}/${project}" preservelastmodified="true" overwrite="true" failonerror="false">
      <fileset dir="${custom.dir}/webapp">
        <include name="favicon.ico"/>
        <include name="css/**"/>
        <include name="fonts/**"/>
        <include name="images/**"/>
        <include name="javascript/**"/>
      </fileset>
    </copy>
    <!-- Prepare the JSPs-->
    <copy todir="${target.dir}/${project}/WEB-INF/jsp">
      <fileset dir="${web.dir}/WEB-INF/jsp"/>
    </copy>
    <!-- Convert the JSPs to Classes -->
    <jasper validateXml="false"
            uriroot="${target.dir}/${project}"
            webXmlFragment="${target.dir}/${project}/WEB-INF/generated_web.xml"
            addWebXmlMappings="true"
            outputDir="${target.dir}/${project}/WEB-INF/src" />
    <!-- Compile the JSPs -->
    <javac destdir="${target.dir}/${project}/WEB-INF/compiled" source="${jdk}" target="${jdk}"
           optimize="on" debug="off"
           srcdir="${target.dir}/${project}/WEB-INF/src"
           excludes="**/*.smap">
      <classpath>
        <pathelement location="${target.dir}/${project}/WEB-INF/classes"/>
        <fileset dir="${target.dir}/${project}/WEB-INF/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${jee.lib.dir}"/>
        <fileset dir="${jee.lib.dir}">
          <include name="*.jar"/>
        </fileset>
      </classpath>
      <include name="**" />
      <exclude name="tags/**" />
    </javac>
    <!-- JAR the JSPs -->
    <jar jarfile="${target.dir}/${project}/WEB-INF/lib/${project}-jsp.jar"
         basedir="${target.dir}/${project}/WEB-INF/compiled" includes="**/*.class" />
    <!-- Cleanup -->
    <delete>
      <fileset dir="${target.dir}/${project}/WEB-INF/jsp"/>
      <fileset dir="${target.dir}/${project}/WEB-INF/src"/>
      <fileset dir="${target.dir}/${project}/WEB-INF/compiled"/>
    </delete>
    <delete includeemptydirs="true">
      <fileset dir="${target.dir}/${project}"  >
        <and>
          <size value="0"/>
          <type type="dir"/>
        </and>
      </fileset>
    </delete>
    <!-- Create .war -->
    <war destfile="${target.dir}/${project}.war"
         basedir="${target.dir}/${project}"
         compress="true"
         manifest="${base.dir}/src/main/webapp/META-INF/MANIFEST.MF"
         webxml="${base.dir}/src/main/webapp/WEB-INF/web.xml"/>
    <!-- Create a checksum -->
    <checksum file="${target.dir}/${project}.war" algorithm="SHA-256" fileext=".sha256" pattern="{0} *{1}"/>
    <!-- Write out a version file to go with the .war -->
    <echo file="${target.dir}/VERSION" message="${version}"/>
  </target>

  <target name="webapp" depends="compile">
    <delete dir="${exploded.work.dir}"/>
    <mkdir dir="${exploded.work.dir}"/>
    <mkdir dir="${exploded.work.dir}/WEB-INF"/>
    <mkdir dir="${exploded.work.dir}/WEB-INF/classes"/>
    <mkdir dir="${exploded.work.dir}/WEB-INF/lib"/>
    <mkdir dir="${exploded.work.dir}/WEB-INF/jsp"/>
    <!-- Project Classes -->
    <copy todir="${exploded.work.dir}/WEB-INF/classes" preservelastmodified="true">
      <fileset dir="${build.dir}">
        <include name="**"/>
      </fileset>
    </copy>
    <!-- Dependency Libraries -->
    <copy todir="${exploded.work.dir}/WEB-INF/lib" flatten="true" preservelastmodified="true">
      <fileset dir="${lib.dir}">
        <include name="**/*.jar"/>
      </fileset>
    </copy>
    <!-- Resources -->
    <copy todir="${exploded.work.dir}/WEB-INF" preservelastmodified="true">
      <fileset dir="${web.dir}/WEB-INF">
        <include name="**/*.html"/>
        <include name="**/*.json"/>
        <include name="**/*.xml"/>
        <include name="**/*.yaml"/>
        <include name="**/*.yml"/>
        <include name="**/*.tld"/>
        <include name="**/*.mmdb"/>
        <include name="**/*.properties"/>
      </fileset>
    </copy>
    <copy todir="${exploded.work.dir}/WEB-INF/classes" preservelastmodified="true">
      <fileset dir="${resources.dir}">
        <include name="**/*.properties"/>
        <include name="**/*.sql"/>
        <exclude name="jobrunr.properties"/>
        <exclude name="jobrunr.production.properties"/>
        <exclude name="simplelogger.properties"/>
        <exclude name="simplelogger.production.properties"/>
      </fileset>
    </copy>
    <!-- Developer setting -->
    <copy file="${resources.dir}/jobrunr.properties"
          tofile="${exploded.work.dir}/WEB-INF/classes/jobrunr.properties"
          verbose="false"
          preservelastmodified="true"/>
    <copy file="${resources.dir}/simplelogger.properties"
          tofile="${exploded.work.dir}/WEB-INF/classes/simplelogger.properties"
          verbose="false"
          preservelastmodified="true"/>
    <!-- Web -->
    <copy todir="${exploded.work.dir}" preservelastmodified="true">
      <fileset dir="${web.dir}">
        <include name="robots.txt"/>
        <include name="css/**"/>
        <include name="fonts/**"/>
        <include name="images/**"/>
        <include name="javascript/**"/>
      </fileset>
    </copy>
    <!-- Custom Web App Content (optional) -->
    <copy todir="${exploded.work.dir}" preservelastmodified="true" overwrite="true" failonerror="false">
      <fileset dir="${custom.dir}/webapp">
        <include name="favicon.ico"/>
        <include name="css/**"/>
        <include name="fonts/**"/>
        <include name="images/**"/>
        <include name="javascript/**"/>
      </fileset>
    </copy>
    <!-- Prepare the JSPs-->
    <copy todir="${exploded.work.dir}/WEB-INF/jsp" preservelastmodified="true">
      <fileset dir="${web.dir}/WEB-INF/jsp"/>
    </copy>
    <!-- Cleanup -->
    <!-- <delete verbose="true" includeemptydirs="true">
      <fileset dir="${exploded.work.dir}"  >
        <and>
          <size value="0"/>
          <type type="dir"/>
        </and>
      </fileset>
    </delete> -->
    <echo message=""/>
    <!-- Sync with the exploded directory -->
    <mkdir dir="${exploded.dir}"/>
    <sync todir="${exploded.dir}">
      <fileset dir="${exploded.work.dir}">
        <include name="**"/>
      </fileset>
    </sync>
    <tstamp prefix="end">
      <format property="val" pattern="yyyy-MM-dd h:mm aa" />
    </tstamp>
    <echo message="Finished: ${end.val}" />
  </target>

  <target name="checkstyle" depends="prepare">
    <mkdir dir="${target.dir}/checkstyle"/>
    <checkstyle config="checkstyle.xml"
                failureProperty="checkstyle.failure"
                failOnViolation="true">
      <formatter type="xml" tofile="${target.dir}/checkstyle-result.xml"/>
      <fileset dir="${src.dir}" includes="**/*.java"/>
    </checkstyle>
  </target>

  <target name="compile-test" depends="jar">
    <javac srcdir="${src.test.dir}" source="${jdk}" target="${jdk}"
           destdir="${build.dir}"
           debug="off"
           deprecation="on"
           optimize="on"
           includeantruntime="false">
      <classpath>
        <path refid="web.classpath"/>
        <path refid="test.classpath"/>
      </classpath>
    </javac>
  </target>

  <target name="ci-test" depends="compile-test">
    <junitlauncher haltOnFailure="false" printsummary="true" failureproperty="hasFailingTest">
      <classpath refid="web.classpath" />
      <classpath refid="test.classpath" />
      <classpath>
        <pathelement location="${build.dir}"/>
      </classpath>
      <testclasses>
        <fileset dir="${build.dir}">
          <include name="**/*Test.class" />
          <include name="**/*Tests.class" />
        </fileset>
        <fork>
          <jvmarg value="-Djava.awt.headless=true"/>
        </fork>
      </testclasses>
    </junitlauncher>
    <fail if="hasFailingTest" />
  </target>

  <target name="run-test" depends="compile-test">
    <mkdir dir="${target.dir}/test-reports"/>
    <jacoco:agent property="jacocoagent" destfile="${target.dir}/jacoco.exec"/>
    <junitlauncher haltOnFailure="true" printSummary="true">
      <classpath refid="web.classpath" />
      <classpath refid="test.classpath" />
      <classpath>
        <pathelement location="${build.dir}"/>
      </classpath>
      <testclasses outputdir="${target.dir}/test-reports">
        <fileset dir="${build.dir}">
          <include name="**/*Test.class" />
          <include name="**/*Tests.class" />
        </fileset>
        <fork>
          <jvmarg value="${jacocoagent}"/>
          <jvmarg value="-Djava.awt.headless=true"/>
        </fork>
      </testclasses>
    </junitlauncher>
  </target>

  <target name="test" depends="run-test">
    <jacoco:report>
      <executiondata>
        <file file="${target.dir}/jacoco.exec"/>
      </executiondata>
      <structure name="CMS Platform">
        <classfiles>
          <fileset dir="${build.dir}">
            <exclude name="**/*Test*.class"/>
          </fileset>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="src/main/java"/>
        </sourcefiles>
      </structure>
      <html destdir="${target.dir}/coverage-reports/jacoco"/>
      <xml destfile="${target.dir}/coverage-reports/jacoco/jacoco.xml"/>
    </jacoco:report>
    <java classpathref="test.classpath" classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
      <arg value="--scan-classpath"/>
      <arg line="--reports-dir ${target.dir}/test-reports"/>
    </java>
    <junitreport todir="${target.dir}/test-reports">
      <fileset dir="${target.dir}/test-reports">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${target.dir}/test-reports/html"/>
    </junitreport>
  </target>

  <target name="mvn-tree">
    <exec executable="mvn">
      <arg value="dependency:tree" />
    </exec>
  </target>

  <target name="mvn-dependencies">
    <delete dir="${lib.dir}" />
    <exec executable="mvn">
      <arg value="dependency:copy-dependencies" />
      <arg value="-DincludeScope=compile" />
      <arg value="-DexcludeArtifactIds=commons-logging" />
      <arg value="-DexcludeGroupIds=org.apache.tomcat,org.projectlombok,org.jetbrains.kotlin,junit" />
      <arg value="-DoutputDirectory=${lib.dir}" />
    </exec>
  </target>

  <target name="node-dependencies">
    <!-- Make sure packages are downloaded -->
    <exec executable="npm">
      <arg value="install" />
    </exec>
    <!-- Copy the packages into the codebase -->
    <exec executable="npm">
      <arg value="run" />
      <arg value="dependencies" />
    </exec>    
  </target>

  <target name="snyk">
    <exec executable="snyk">
      <arg value="test" />
    </exec>
  </target>

</project>
